{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["var express = require('express');\nvar request = require('request');\n\nvar key = '7hw378dceajv/';\nvar baseUrl = 'http://www.fantasyfootballnerd.com/service/';\nvar format = 'json/';\n\n// Create a router\nvar router = express.Router();\n\nvar playerList = [\"Andrew Luck\", \"Matt Forte\"];\n\n\n// Set up the collection routes\n\n/**\n * GET /\n * Return the list of NFL teams\n */\nrouter.get(['/'], function (req, res, next) {\n    console.log('NFL teams');\n\n    // Compose the url request for the teams\n    var teamsListUrl = baseUrl + 'nfl-teams/' + format + key;\n\n    // Get the list of teams\n    request.get(teamsListUrl, function (err, response, body) {\n        if (err) throw err;\n\n        var parsed = JSON.parse(body);\n        console.log(parsed);\n        res.send(parsed);\n    })\n});\n\n\n/**\n * GET /<team>/schedule\n * Return a list of a teams schedule\n */\nrouter.get('/:team/schedule', function (req, res, next) {\n    console.log(req.params['team'] + '\\'s schedule');\n\n    // Compose the url request for a teams schedule\n    var teamScheduleUrl = baseUrl + 'schedule/' + format + key;\n    console.log(teamScheduleUrl);\n\n    // Get the full NFL schedule for all teams\n    request.get(teamScheduleUrl, function (err, response, body) {\n        if (err) throw err;\n\n        // Parse the JSON response body\n        var parsed = JSON.parse(body);\n        console.log(parsed);\n\n        // Filter the JSON to just return fixtures for the required team\n        var teamSchedule = [];\n        for (var i = 0; i < parsed.Schedule.length; i++) {\n            if (parsed.Schedule[i].awayTeam === req.params['team'] || parsed.Schedule[i].homeTeam === req.params['team']) {\n                teamSchedule.push(parsed.Schedule[i]);\n            }\n        }\n        console.log(teamSchedule);\n        res.send(teamSchedule);\n    })\n});\n\n\n/**\n * GET /<team>/players\n * Return a list of the teams players\n */\nrouter.get('/:team/players', function (req, res, next) {\n    console.log(req.params['team'] + '\\'s players');\n    var team = req.params['team'];\n\n    // Compose the url request for a teams schedule\n    var teamPlayersUrl = baseUrl + 'players/' + format + key;\n\n    // Get the full list of players for all teams\n    request.get(teamPlayersUrl, function (err, response, body) {\n        if (err) throw err;\n\n        var parsed = JSON.parse(body);\n\n        // Filter the JSON to just return players matching the selected team\n        var players = [];\n        console.log(\"Team: \" + team);\n        for (var i = 0; i < parsed.Players.length; i++) {\n            if (parsed.Players[i].team === team) {\n                players.push(parsed.Players[i]);\n            }\n        }\n        console.log(players);\n        res.send(players);\n    });\n});\n\n\n/**\n * GET /rank/:position/:week\n * Return a ranked list of players score in a position for the previous week\n */\nrouter.get('/rank/:position/:week', function (req, res, next) {\n    console.log(\"Position: \" + req.params['position']);\n    console.log(\"Week: \" + req.params['week']);\n\n    var rankingsUrl = baseUrl + 'weekly-rankings/' + format + key + req.params['position'] + \"/\" + req.params['week'] + \"/0\";\n    console.log(rankingsUrl);\n\n    // Get the rank of players for the position provided\n    request.get(rankingsUrl, function (err, response, body) {\n        if (err) throw err;\n\n        var parsed = JSON.parse(body);\n\n        console.log(parsed.Rankings);\n        res.send(parsed.Rankings);\n    })\n});\n\n/**\n * GET /projection/:position/:week\n * Return a ranked list of the projected score of players in a position for a week\n */\nrouter.get('/projection/:position/:week', function (req, res, next) {\n    console.log(\"Position: \" + req.params['position']);\n    console.log(\"Week: \" + req.params['week']);\n\n    var projectionsUrl = baseUrl + 'weekly-projections/' + format + key + req.params['position'] + \"/\" + req.params['week'] + \"/0\";\n\n    // Get the projections of players for the position provided\n    request.get(projectionsUrl, function (err, response, body) {\n        if (err) throw err;\n\n        var parsed = JSON.parse(body);\n\n        console.log(parsed.Projections);\n        res.send(parsed.Projections);\n    })\n});\n\n/**\n * GET /my-team\n * Return the players on my team\n */\nrouter.get('/my-team', function (req, res, next) {\n    console.log(\"My team\");\n\n    // http://www.fantasyfootballnerd.com/service/players/xml/7hw378dceajv/\n    var playersUrl = baseUrl + 'players/' + format + key;\n    console.log(playersUrl);\n\n    request.get(playersUrl, function (err, response, body) {\n        if (err) throw err;\n\n        var parsed = JSON.parse(body);\n\n        console.log(parsed.Players);\n        console.log(\"Player List: \" + playerList[0]);\n\n        // <Players>\n        // {/*<Player playerId=\"1\" active=\"0\" jersey=\"0\" lname=\"Ainge\" fname=\"Erik\" displayName=\"Erik Ainge\"*/}\n\n        // Filter the JSON to just return just the players in my team\n        var playersStats = [];\n        for (var i = 0; i < playerList.length; i++) {\n            console.log(\"I: \" + i);\n            for (var j = 0; j < parsed.Players.length; j++) {\n                console.log(\"J: \" + j);\n                if (playerList[i] === parsed.Players[j].displayName) {\n                    playersStats.push(parsed.Players[j]);\n                    console.log(playerList[i]);\n                    break;\n                }\n            }\n        }\n        res.send(playersStats);\n    });\n});\n\nvar app = express();\n\n\napp.use('/', router)\n    .use(express.static(__dirname + '/public'))\n    .listen(3000, function () {\n        console.log('Listening on port 3000...')\n    });\n\n\n\n\n\n\n\n\n\n"]}